<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
       
    
    <!-- Enable Spring's annotation configuration (e.g. @autowired) -->
    <context:annotation-config />
    
    
	<!-- Apache Commons Configuration Composite configuration -->
	<bean id="configurations" class="org.springmodules.commons.configuration.CommonsConfigurationFactoryBean">
		<property name="configurations">
			<list>

				<!--  System properties   -->
				<bean class="org.apache.commons.configuration.SystemConfiguration" />
				<bean class="org.apache.commons.configuration.XMLConfiguration">
					<constructor-arg type="java.net.URL" value="file:${user.home}/tour-config.xml" />
					<property name="reloadingStrategy">
						<bean class="org.apache.commons.configuration.reloading.FileChangedReloadingStrategy" />
					</property>
				</bean>
			</list>
		</property>
		<!--
			define configuration as a set of spring resources <property name="locations" value="classpath*:META-INF/default.properties" />
		-->
	</bean>
	<!--
		De &amp;configurations in de onderstaande configuratie geeft de bean hierboven "configurations" terug. Dit is nodig omdat deze bean een
		Spring FactoryBean is. Een normale referentie zonder &amp; zou het object teruggeven dat door de FactoryBean 'getObject' wordt
		teruggegeven. De Spring FactoryBean heeft deze eigenschap en kan daarom niet zomaar als een normal bean worden gebruikt. Hij wordt veel
		gebruikt in de 'internals' van het framework.
	-->
	<bean id="commonsConfiguration" factory-bean="&amp;configurations" factory-method="getConfiguration" />
	<bean id="tourConfiguration" class="nl.doyle.mccloud.tourdefrance.config.TourConfigImpl">
		<property name="config">
			<ref local="commonsConfiguration" />
		</property>
	</bean>
	
	
	<!-- JPA configuration -->

	<!-- Hibernate SessionFactory -->
	<!-- 
	<bean id="tourDeFranceSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="tourDeFranceDataSource" />
		</property>
		<property name="hibernateProperties">
			<ref bean="tourDeFranceHibernateProperties" />
		</property>
		<property name="mappingResources">
			<list>
				<value>hibernate/Renner.hbm.xml</value>
				<value>hibernate/Deelnemer.hbm.xml
				</value>
				<value>hibernate/EtappeHierarchy.hbm.xml
				</value>
				<value>hibernate/GeleTruiUitslag.hbm.xml
				</value>
				<value>hibernate/GroeneTruiUitslag.hbm.xml
				</value>
				<value>hibernate/BolletjesTruiUitslag.hbm.xml
				</value>
				<value>hibernate/EtappeUitslag.hbm.xml
				</value>
				<value>hibernate/Team.hbm.xml</value>
				<value>hibernate/Stad.hbm.xml</value>
				<value>hibernate/UitslagBedrag.hbm.xml
				</value>
			</list>
		</property>
	</bean>
	-->

	<!-- Spring's JPA EntityManagerFactory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="tourDeFranceDataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.DerbyDialect" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				 -->
				<prop key="hibernate.query.substitutions">true 'T', false 'F'</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>

			</props>
		</property>
	</bean>

	<!-- The datasource used by the JPA Entity Manager Factory. Using a C3P0 ComboPooledDataSource to have some connection pooling. -->
	<bean id="tourDeFranceDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="jdbcUrl" value="jdbc:derby:TourDeFranceJpaDb2009;create=true" />
		<property name="user" value="tour" />
		<property name="password" value="manager" />
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!--
		<bean id="jamonMonitoredDataSource" class="com.jamonapi.proxy.JAMonDataSource"> <constructor-arg> <ref bean="tourDeFranceDataSource"/>
		</constructor-arg> </bean>
	-->

	<!-- The JPA Transaction Manager. -->
	<bean id="tourJpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory">
			<ref local="entityManagerFactory" />
		</property>
		<!--
			Setting the datasource explicitly so we can have plain JDBC calls participate in a JPA Transaction. The datasource MUST match the
			EntityManagerFactory's datasource.
		-->
		<property name="dataSource">
			<ref local="tourDeFranceDataSource" />
		</property>
	</bean>

	<!--
		<bean id="productDao" class="nl.doyle.mccloud.dowjones.dao.jpa.JpaProductDao"> <property name="entityManagerFactory"
		ref="entityManagerFactory" /> </bean>
	-->

	<!-- Declaration of all DAO's -->
	<bean id="abstractDaoHibernate" abstract="true">
	<!-- 
		<property name="sessionFactory">
			<ref local="tourDeFranceSessionFactory" />
		</property>
 	-->	
	</bean>
	<bean id="abstractDaoJpa" abstract="true">
		<property name="entityManagerFactory">
			<ref local="entityManagerFactory" />
		</property>
	</bean>
	 
	<bean id="abstractDaoJdbc" abstract="true">
		<property name="dataSource">
			<ref bean="tourDeFranceDataSource" />
			<!-- <ref local="jamonMonitoredDataSource"/>   -->
		</property>
	</bean>
	
	<bean id="deelnemerDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.DeelnemerDaoHibernateImpl" />
	<bean id="rennerDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.RennerDaoHibernateImpl" />
	<bean id="standaardEtappeDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.StandaardEtappeDaoHibernateImpl" />
	<bean id="ploegenTijdritDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.PloegenTijdritDaoHibernateImpl" />
	<bean id="etappeUitslagDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.EtappeUitslagDaoHibernateImpl" />
	<bean id="geleTruiUitslagDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.GeleTruiUitslagDaoHibernateImpl" />
	<bean id="groeneTruiUitslagDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.GroeneTruiUitslagDaoHibernateImpl" />
	<bean id="bolletjesTruiUitslagDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.BolletjesTruiUitslagDaoHibernateImpl" />
	<bean id="teamDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.TeamDaoHibernateImpl" />
	<bean id="gameSetupDao" parent="abstractDaoJdbc" class="nl.doyle.mccloud.tourdefrance.setup.dao.GameSetupDaoImpl" />
	<bean id="stadDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.StadDaoHibernateImpl" />
	<bean id="uitslagBedragDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.UitslagBedragDaoHibernateImpl" />
	<bean id="eindUitslagDao" parent="abstractDaoHibernate" class="nl.doyle.mccloud.tourdefrance.dao.hibernate.EindUitslagDaoHibernateImpl" />

	<!-- Definition of all controllers -->
	<bean id="gameSetupController" class="nl.doyle.mccloud.tourdefrance.setup.GameSetupControllerImpl">
		<property name="deelnemerDao">
			<ref local="deelnemerDao" />
		</property>
		<property name="rennerDao">
			<ref local="rennerDao" />
		</property>
		<property name="standaardEtappeDao">
			<ref local="standaardEtappeDao" />
		</property>
		<property name="ploegenTijdritDao">
			<ref local="ploegenTijdritDao" />
		</property>
		<property name="teamDao">
			<ref local="teamDao" />
		</property>
		<property name="eindUitslagDao">
			<ref local="eindUitslagDao" />
		</property>
		<property name="gameSetupDao">
			<ref local="gameSetupDao" />
		</property>
	</bean>
	<bean id="calculator" class="nl.doyle.mccloud.tourdefrance.calculator.CalculatorImpl">
		<property name="deelnemerDao">
			<ref local="deelnemerDao" />
		</property>
		<property name="eindUitslagDao">
			<ref local="eindUitslagDao" />
		</property>
		<property name="ploegenTijdritDao">
			<ref local="ploegenTijdritDao" />
		</property>
		<property name="standaardEtappeDao">
			<ref local="standaardEtappeDao" />
		</property>
		<property name="uitslagBedragDao">
			<ref local="uitslagBedragDao" />
		</property>
		<property name="tourFacade">
			<ref bean="tourFacade" />
		</property>
		<property name="tourConfig">
			<ref local="tourConfiguration" />
		</property>
	</bean>
	<bean id="tourFacade" class="nl.doyle.mccloud.tourdefrance.controller.TourFacadeImpl">
		<property name="deelnemerDao">
			<ref local="deelnemerDao" />
		</property>
		<property name="standaardEtappeDao">
			<ref local="standaardEtappeDao" />
		</property>
		<property name="ploegenTijdritDao">
			<ref local="ploegenTijdritDao" />
		</property>
		<property name="eindUitslagDao">
			<ref local="eindUitslagDao" />
		</property>
		<property name="uitslagBedragDao">
			<ref local="uitslagBedragDao" />
		</property>
	</bean>
 	
	<!--
	<bean id="commonsLoggingAop" class="nl.doyle.mccloud.aop.CommonsLoggingAop"> <constructor-arg index="0" value="INFO"/> </bean>
	
	<bean id="jamonPerformanceAop"
		class="nl.doyle.mccloud.aop.JamonPerformanceAop"/>
	-->

	<!-- AOP config voor TransactionManagement -->
	<aop:config>
		<aop:pointcut id="hibernateDeelnemerTransactions" expression="execution(* nl.doyle.mccloud.tourdefrance.dao.hibernate.DeelnemerDaoHibernateImpl.*(..))" />
		<aop:pointcut id="hibernateStandaardEtappeTransactions" expression="execution(* nl.doyle.mccloud.tourdefrance.dao.hibernate.StandaardEtappeDaoHibernateImpl.*(..))" />
		<aop:pointcut id="hibernatePloegenTijdritTransactions" expression="execution(* nl.doyle.mccloud.tourdefrance.dao.hibernate.PloegenTijdritDaoHibernateImpl.*(..))" />
		<aop:pointcut id="hibernateEindUitslagTransactions" expression="execution(* nl.doyle.mccloud.tourdefrance.dao.hibernate.EindUitslagDaoHibernateImpl.*(..))" />
		<!--
			<aop:pointcut id="jdbcTransactions" expression="execution(*
			nl.doyle.mccloud.tourdefrance.setup.dao.*.*(..))"/>
		-->
		<!--
			JDBC calls kunnen ook meefietsen op een Hibernate transaction wanneer er gebruik wordt gemaakt van JDBCDaoSupport Zo kunnen we Hibernate
			en JDBC mixen in dezelfde transactie
		-->
		<aop:pointcut id="setupDaoTransactions" expression="execution(* nl.doyle.mccloud.tourdefrance.setup.dao.*.*(..))" />
		<aop:pointcut id="gameSetupGenerateTeams" expression="execution(* nl.doyle.mccloud.tourdefrance.setup.GameSetupControllerImpl.generateDeelnemerTeams(..))" />
		<aop:pointcut id="gameSetupInitializeGame" expression="execution(* nl.doyle.mccloud.tourdefrance.setup.GameSetupControllerImpl.initializeGame(..))" />
		<aop:pointcut id="calculatorPointcut" expression="execution(* nl.doyle.mccloud.tourdefrance.calculator.CalculatorImpl.*(..))" />
		<aop:advisor pointcut-ref="hibernateDeelnemerTransactions" advice-ref="jpaTxAdvice" />
		<aop:advisor pointcut-ref="hibernateStandaardEtappeTransactions" advice-ref="jpaTxAdvice" />
		<aop:advisor pointcut-ref="hibernatePloegenTijdritTransactions" advice-ref="jpaTxAdvice" />
		<aop:advisor pointcut-ref="hibernateEindUitslagTransactions" advice-ref="jpaTxAdvice" />
		<aop:advisor pointcut-ref="setupDaoTransactions" advice-ref="setupDaoJpaTxAdvice" />
		<aop:advisor pointcut-ref="gameSetupGenerateTeams" advice-ref="gameSetupJpaTxAdvice" />
		<aop:advisor pointcut-ref="gameSetupInitializeGame" advice-ref="gameSetupJpaTxAdvice" />
		<!--
			<aop:aspect id="jamonPerformanceAspect" ref="jamonPerformanceAop"> <aop:around method="doJamonPerformanceLogging"
			pointcut-ref="calculatorPointcut" /> </aop:aspect>
		-->
	</aop:config>



	<!-- Transaction config in Spring 2.5 -->
	<tx:advice id="jpaTxAdvice" transaction-manager="tourJpaTransactionManager">
		<tx:attributes>
			<tx:method name="*Eager" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="gameSetupJpaTxAdvice" transaction-manager="tourJpaTransactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="setupDaoJpaTxAdvice" transaction-manager="tourJpaTransactionManager">
		<tx:attributes>
			<tx:method name="deleteAll*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
</beans>